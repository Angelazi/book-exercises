?substr
lyric <- "I like to eat apples and bananas"
substr(lyric, 1, 13)
intro <- substr(lyric, 1, 13)
fruits <- substr(lyric, 15, length(lyric))
nchar(lyric)
fruits <- substr(lyric, 15, nchar(lyric))
?gsub
fruits_e <- gsub("a", "ee", fruits)
fruits_o <- gsub("a", "o", fruits)
lyric_e <- paste(intro, fruits_e)
lyric_e <- paste(intro, fruits_e)
print(lyric_e)
# Without making a new variable, print out the `intro` combined with the new
# `fruits_o` ending
print(paste(intro, fruits_o))
add_three <- function(number) {
value <- number + 3
return value
}
add_three <- function(number) {
value <- (number + 3)
return value
}
add_three <- function(number) {
value <- number + 3
return(value)
}
ten <- add_three(7)
imperial_to_metric <- (numFeet, numInch) {
meterF <- 0.3048*numFeet
meterI <- 0.0254*numInch
return (meterF)
return(meterI)
}
imperial_to_metric <- (numFeet, numInch) {
meterF <- 0.3048 * numFeet
meterI <- 0.0254 * numInch
return (meterF)
return(meterI)
}
imperial_to_metric <- (numFeet, numInch) {
return(paste(0.3048 * numFeet, 0.0254 * numInch)
}
print (imperial_to_metric(2,3))
# The function should return the equivalent length in meters
imperial_to_metric <- function(numFeet, numInch) {
return(paste(0.3048 * numFeet, 0.0254 * numInch)
}
print (imperial_to_metric(2,3))
# The function should return the equivalent length in meters
imperial_to_metric <- function(numFeet, numInch) {
return(paste(0.3048 * numFeet, 0.0254 * numInch))
}
print (imperial_to_metric(2,3))
height_in_meters <- imperial_to_metric(5,6)
